<mxfile host="drawio-plugin" modified="2022-02-03T13:36:53.913Z" agent="5.0 (Macintosh; Intel Mac OS X 12_2_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.114 Safari/537.36" etag="tRyf3HGwVTP0bfJ1RUzE" version="15.5.4" type="embed"><diagram id="23iRSUPoRavnBvh4doch" name="Page-1"><mxGraphModel dx="544" dy="633" grid="1" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="1" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0"><root><mxCell id="0"/><mxCell id="1" parent="0"/><mxCell id="2" value="using System;&#10;&#10;namespace practice9&#10;{&#10;    public class Money&#10;    {&#10;        private int rubles, kopeks;&#10;        public static int count = 0;&#10;&#10;        #region Свойства&#10;        public int Rubles&#10;        {&#10;            get&#10;            {&#10;                return rubles;&#10;            }&#10;            set&#10;            {&#10;                if (value &lt; 0)&#10;                {&#10;                    Console.WriteLine(&quot;Error!&quot;);&#10;                    rubles =  0;&#10;                }&#10;                else rubles = value;&#10;            }&#10;        }&#10;&#10;        public int Kopeks&#10;        {&#10;            get&#10;            {&#10;                return kopeks;&#10;            }&#10;            set&#10;            {&#10;                if (value &lt; 0)&#10;                {&#10;                    if (rubles &lt; 1)&#10;                    {&#10;                        Console.WriteLine(&quot;Error!&quot;);&#10;                        kopeks = 0;&#10;                    }&#10;                    else&#10;                    {&#10;                        rubles -= 1;&#10;                        kopeks = value + 100;&#10;                    }&#10;                }&#10;                else if (value &gt;= 100)&#10;                {   &#10;                    rubles += value / 100;&#10;                    kopeks = value % 100;&#10;                }&#10;                else kopeks = value;&#10;            }&#10;        }&#10;        #endregion&#10;&#10;        #region Конструкторы&#10;&#10;        public Money()&#10;        {&#10;            Rubles = 0;&#10;            Kopeks = 0;&#10;            count++;&#10;        }&#10;&#10;        public Money(int rubles, int kopeks)&#10;        {&#10;            Rubles = rubles;&#10;            Kopeks = kopeks;&#10;            count++;&#10;        }&#10;        #endregion&#10;        &#10;        #region Операторы&#10;        //унарные операторы&#10;        public static Money operator++(Money m)&#10;        {&#10;            m.Kopeks += 1;&#10;            return m;&#10;        }&#10;        &#10;        public static Money operator--(Money m)&#10;        {&#10;            m.Kopeks -= 1;&#10;            return m;&#10;        }&#10;        //бинарные опрераторы&#10;        public static Money operator-(Money m, int num)&#10;        {&#10;            m.Kopeks -= num;&#10;            return m;&#10;        }&#10;        &#10;        public static Money operator-(int num, Money m)&#10;        {&#10;            m.Kopeks -= num;&#10;            return m;&#10;        }&#10;        &#10;        public static Money operator+(Money m, int num)&#10;        {&#10;            m.Kopeks += num;&#10;            return m;&#10;        }&#10;        &#10;        public static Money operator+(int num, Money m)&#10;        {&#10;            m.Kopeks += num;&#10;            return m;&#10;        }&#10;        //приведение типов&#10;        public static implicit operator int(Money m)//рубли&#10;        {&#10;            return m.Rubles;&#10;        }&#10;        &#10;        public static explicit operator double(Money m)//копейки&#10;        {&#10;            return (double)m.Kopeks/100;&#10;        }&#10;        #endregion&#10;        &#10;        #region Методы&#10;        public string Show()&#10;        {&#10;            return ($&quot;{rubles} руб. {kopeks} коп.&quot;);&#10;        }&#10;        //bool сравнение обьектов&#10;        public static bool isBigger(Money m1, Money m2)&#10;        {&#10;            return (m1.toKopeks() &gt; m2.toKopeks());&#10;        }&#10;&#10;        public  bool isBigger(Money m2)&#10;        {&#10;            return this.toKopeks() &gt; m2.toKopeks();&#10;        }&#10;        //добавление копеек&#10;        public static void AddKopeks(Money m, int num)&#10;        {&#10;            m.Kopeks += num;&#10;        }&#10;&#10;        public void AddKopeks(int num)&#10;        {&#10;            this.Kopeks += num;&#10;        }&#10;        #endregion&#10;        //сумма –&gt; копейки&#10;        public int toKopeks()&#10;        {&#10;            return Rubles * 100 + Kopeks;&#10;        }&#10;    }&#10;}" style="text;whiteSpace=wrap;html=1;" vertex="1" parent="1"><mxGeometry x="230" y="370" width="330" height="2210" as="geometry"/></mxCell></root></mxGraphModel></diagram></mxfile>